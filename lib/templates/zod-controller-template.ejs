import { Request, Response } from 'express';
import <%= model.name %>Service from '../services/<%= model.name.toLowerCase() %>.service';
import { ZodError } from 'zod';

export class <%= model.name %>Controller {
  async create(req: Request, res: Response) {
    try {
      const <%= model.name.toLowerCase() %> = await <%= model.name %>Service.create(req.body);
      res.status(201).json(<%= model.name.toLowerCase() %>);
    } catch (error) {
      if (error instanceof Error && error.message.includes('Validation error')) {
        return res.status(400).json({ error: error.message });
      }
      res.status(500).json({ error: error.message });
    }
  }

  async findAll(req: Request, res: Response) {
    try {
      const <%= model.name.toLowerCase() %>s = await <%= model.name %>Service.findAll();
      res.json(<%= model.name.toLowerCase() %>s);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async findById(req: Request, res: Response) {
    try {
      const <%= model.name.toLowerCase() %> = await <%= model.name %>Service.findById(req.params.id);
      if (!<%= model.name.toLowerCase() %>) {
        return res.status(404).json({ message: '<%= model.name %> not found' });
      }
      res.json(<%= model.name.toLowerCase() %>);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async update(req: Request, res: Response) {
    try {
      const <%= model.name.toLowerCase() %> = await <%= model.name %>Service.update(req.params.id, req.body);
      res.json(<%= model.name.toLowerCase() %>);
    } catch (error) {
      if (error instanceof Error && error.message.includes('Validation error')) {
        return res.status(400).json({ error: error.message });
      }
      res.status(500).json({ error: error.message });
    }
  }

  async delete(req: Request, res: Response) {
    try {
      await <%= model.name %>Service.delete(req.params.id);
      res.status(204).send();
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }
}

export default new <%= model.name %>Controller();

