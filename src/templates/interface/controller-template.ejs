
import { Request, Response } from 'express';
import { <%= model.name %>UseCase } from '../../../application/use-cases/<%= model.name.toLowerCase() %>.use-case';
import { Create<%= model.name %>DTO, Update<%= model.name %>DTO } from '../../../application/dtos/<%= model.name.toLowerCase() %>.dto';

export class <%= model.name %>Controller {
  constructor(private readonly <%= model.name.toLowerCase() %>UseCase: <%= model.name %>UseCase) {}

  async create(req: Request, res: Response): Promise<void> {
    try {
      const result = await this.<%= model.name.toLowerCase() %>UseCase.create(req.body as Create<%= model.name %>DTO);
      res.status(201).json(result);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async findAll(req: Request, res: Response): Promise<void> {
    try {
      const results = await this.<%= model.name.toLowerCase() %>UseCase.findAll();
      res.status(200).json(results);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async findById(req: Request, res: Response): Promise<void> {
    try {
      const result = await this.<%= model.name.toLowerCase() %>UseCase.findById(req.params.id);
      
      if (!result) {
        res.status(404).json({ message: '<%= model.name %> not found' });
        return;
      }
      
      res.status(200).json(result);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async update(req: Request, res: Response): Promise<void> {
    try {
      const result = await this.<%= model.name.toLowerCase() %>UseCase.update(
        req.params.id, 
        req.body as Update<%= model.name %>DTO
      );
      
      res.status(200).json(result);
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }

  async delete(req: Request, res: Response): Promise<void> {
    try {
      await this.<%= model.name.toLowerCase() %>UseCase.delete(req.params.id);
      res.status(204).send();
    } catch (error) {
      res.status(500).json({ error: error.message });
    }
  }
}